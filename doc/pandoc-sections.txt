*pandoc-sections.txt*		For Vim version 7.4		Last change: 2014 September 09

pandoc-sections.vim provides section motions [[ ]] [] and ][ and text objects
i]] i][ a]] a][ I][ and A][. These motions and text objects account for both
Setext (= and -) as well as ATX-style (#, ##, etc.) section headers. 


============================================================================
0. Contents     									    				*pandoc-sections-contents*

1. Installation 					|pandoc-sections-installation|
2. Mappings							  |pandoc-sections-mappings|
   2.1 Motions 						|pandoc-sections-motions|
   2.2 Text-Objects				|pandoc-sections-textobj|
	   2.2a Text-Objects	  |pandoc-sections-textobj-simple|
	   2.2b Text-Objects	  |pandoc-sections-textobj-advanced|
3. Credits								|pandoc-sections-credits|
    

============================================================================
1. Installation     		 											*pandoc-sections-installation*

- Using a plugin manager

	I use NeoBundle:

		NeoBundle 'gbgar/pandoc-sections.vim', 

- Manually

	Retrieve pandoc-sections.vim and copy it to 
	~/.vim/ftplugins/pandoc/pandoc-sections.vim.

- Set pandoc filetype association (Optional)
  
	If you wish to do so, add an autocommand to associate a filetype with 
	pandoc in your vimrc or in $VIMFILES/ftdetect/pandoc.vim. For example:

		au BufNewFile,BufRead *.pdk set filetype=pandoc

	Then, you may Lazy-load with NeoBundle:

		NeoBundleLazy 'gbgar/pandoc-sections.vim', 
							 		\{ 'autoload' : { 'filetype' : 'pandoc' } }

============================================================================
2. Mappings   													  	*pandoc-sections-mappings*

Because this plugin is a filetype-plugin, all mappings are buffer-local.

============================================================================
2.1 Motions    															*pandoc-sections-motions*

Section motions accept a count and work in normal, visual, and
operator-pending modes.

map    	action
----------------------------------------------------------------------------

]] 			Skip forward one primary section header.

[[ 			Skip backward one primary section header.

][ 			Skip forward one section header in the second through sixth levels.

[] 			Skip backward one section header in the second through sixth levels.

============================================================================
2.2 Text-Objects       											*pandoc-sections-textobj*

Section text objects operate/select upon primary and secondary through
sixth-level sections. Two types of section objects are available: simple and
advanced.

Primary section objects work in any location, but with the addition of
advanced text objects, the lower-level objects only function within
lower-level headings. This is to prevent odd jumping behavior when used in an
exclusively first-level heading.  

============================================================================
2.2a Simple Text-Objects       							*pandoc-sections-textobj-simple*

Simple text objects operate strictly within the current subheading and 
without reference to hierarchy.

map    	action
----------------------------------------------------------------------------

i]] 		Inner primary section header.

i][ 		Inner secondary through sixth-level header.

a]]			All of primary header.

a][			All of secondary through sixth-level header.

============================================================================
2.2b Advanced Text-Objects       					*pandoc-sections-textobj-advanced*

"Advanced" text objects operate with reference to header hierarchy. For
example, an advanced section text object will operate on a third-level
heading and any fourth-level through sixth-level headings beneath, until
the bottom or a first- through third-level heading is reached.

map    	action
----------------------------------------------------------------------------

I][ 		Hierarchy-aware inner secondary through sixth-level header.

A][			Hierarchy-aware all of secondary through sixth-level header.

============================================================================
3. Credits   													  	*pandoc-sections-credits*

This filetype plugin is based on Steve Losh's Learn Vimscript the Hard Way
"Potions section movement" chapter, found here:

http://learnvimscriptthehardway.stevelosh.com/chapters/51.html

as well as

http://vim.wikia.com/wiki/Creating_new_text_objects.

Pandoc is a document converter created by John MacFarlane:

http://johnmacfarlane.net/pandoc/index.html

vim:tw=78:noet:ts=2:ft=help:norl:
